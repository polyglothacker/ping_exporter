#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          gpm
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: gpm sysv init script
# Description:       general purpose mouse event server
### END INIT INFO
#

PIDFILE=/var/run/ping-exporter.pid
PING_EXPORTER=/usr/bin/ping_exporter

test -x $PING_EXPORTER || exit 0

. /lib/lsb/init-functions

if [ "$(id -u)" != "0" ] && [ "$1" != status ]
then
  log_failure_msg "You must be root to start, stop or restart ping-exporter."
  exit 1
fi

cmdln="--config.path=/etc/ping_exporter/config.yaml"
niceness=0
ssd_args="--quiet --oknodo --nicelevel $niceness --pidfile $PIDFILE --exec $PING_EXPORTER"

ping_exporter_start () {
  log_daemon_msg "Starting ping-exporter daemon" "ping-exporter"
  # HACK - kernel module init is asynchronous in kernel 2.6, EVEN FROM
  # REQUEST_MODULE().  That would include 'mousedev'.  The correct
  # solution is a hotplug script, but we cannot depend on hotplug being
  # available just yet, either kernel-side or user-side.
  start-stop-daemon --start $ssd_args -b -- $cmdln
  log_end_msg $?
  return $?
}

ping_exporter_stop () {
  log_daemon_msg "Stopping ping-exporter daemon" "ping-exporter"
  start-stop-daemon --exec $PING_EXPORTER --stop SIGTERM
  log_end_msg $?
  return $?
}


case "$1" in
  start)
     ping_exporter_start || exit 1
     ;;
  stop)
     ping_exporter_stop || exit 1
     ;;
  force-reload|restart)
     ping_exporter_stop && sleep 3
     ping_exporter_start || exit 1
     ;;
  status)
     status_of_proc $PING_EXPORTER ping-exporter && exit 0 || exit $?
     ;;
  *)
     echo "Usage: /etc/init.d/ping-exporter {start|stop|restart|force-reload|status}"
     exit 1
esac

exit 0
